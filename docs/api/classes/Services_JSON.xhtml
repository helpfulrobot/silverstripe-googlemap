<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Services_JSON</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">Services_JSON</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/code/converters/thirdparty/Services_JSON.php.xhtml#line115">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>Services_JSON</h1>
        <h4>Converts to and from JSON format.</h4>
        <p>Brief example of use:<br/><br/>&lt;code&gt;<br/>// create a new instance of Services_JSON<br/>$json = new Services_JSON();<br/><br/>// convert a complexe value to JSON notation, and send it to the browser<br/>$value = array('foo', 'bar', array(1, 2, 'baz'), array(3, array(4)));<br/>$output = $json-&gt;encode($value);<br/><br/>print($output);<br/>// prints: ["foo","bar",[1,2,"baz"],[3,[4]]]<br/><br/>// accept incoming POST data, assumed to be in JSON notation<br/>$input = file_get_contents('php://input', 1000000);<br/>$value = $json-&gt;decode($input);<br/>&lt;/code&gt;</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Services_JSON
            {<br/><ul class="none"><li>// methods</li><li>public void <a title="Services_JSON" href="../classes/Services_JSON/Services_JSON.xhtml">Services_JSON</a>()
                    </li><li>public string <a title="Services_JSON" href="../classes/Services_JSON/utf162utf8.xhtml">utf162utf8</a>()
                    </li><li>public string <a title="Services_JSON" href="../classes/Services_JSON/utf82utf16.xhtml">utf82utf16</a>()
                    </li><li>public mixed <a title="Services_JSON" href="../classes/Services_JSON/encode.xhtml">encode</a>()
                    </li><li>public string <a title="Services_JSON" href="../classes/Services_JSON/name_value.xhtml">name_value</a>()
                    </li><li>public string <a title="Services_JSON" href="../classes/Services_JSON/reduce_string.xhtml">reduce_string</a>()
                    </li><li>public mixed <a title="Services_JSON" href="../classes/Services_JSON/decode.xhtml">decode</a>()
                    </li><li>public void <a title="Services_JSON" href="../classes/Services_JSON/isError.xhtml">isError</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">766+</td>
            <td>Ultimately, this should just call PEAR::isError()</td>
          </tr>
        </table>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="Services_JSON"><a title="Services_JSON" href="../classes/Services_JSON/Services_JSON.xhtml">Services_JSON()</a>
                — constructs a new JSON instance</li>
            <li id="decode"><a title="Services_JSON" href="../classes/Services_JSON/decode.xhtml">decode()</a>
                — decodes a JSON string into appropriate variable</li>
            <li id="encode"><a title="Services_JSON" href="../classes/Services_JSON/encode.xhtml">encode()</a>
                — encodes an arbitrary variable into JSON format</li>
            <li id="isError">
              <a title="Services_JSON" href="../classes/Services_JSON/isError.xhtml">isError()</a>
            </li>
            <li id="name_value"><a title="Services_JSON" href="../classes/Services_JSON/name_value.xhtml">name_value()</a>
                — array-walking function for use in generating JSON-formatted name-value pairs</li>
            <li id="reduce_string"><a title="Services_JSON" href="../classes/Services_JSON/reduce_string.xhtml">reduce_string()</a>
                — reduce a string by removing leading and trailing comments and whitespace</li>
            <li id="utf162utf8"><a title="Services_JSON" href="../classes/Services_JSON/utf162utf8.xhtml">utf162utf8()</a>
                — convert a string from one UTF-16 char to one UTF-8 char</li>
            <li id="utf82utf16"><a title="Services_JSON" href="../classes/Services_JSON/utf82utf16.xhtml">utf82utf16()</a>
                — convert a string from one UTF-8 char to one UTF-16 char</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
